// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	sale_offer "github.com/susek555/BD2/car-dealer-api/internal/domains/sale_offer"
	models "github.com/susek555/BD2/car-dealer-api/internal/models"
)

// SaleOfferServiceInterface is an autogenerated mock type for the SaleOfferServiceInterface type
type SaleOfferServiceInterface struct {
	mock.Mock
}

type SaleOfferServiceInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *SaleOfferServiceInterface) EXPECT() *SaleOfferServiceInterface_Expecter {
	return &SaleOfferServiceInterface_Expecter{mock: &_m.Mock}
}

// Delete provides a mock function with given fields: id, userID
func (_m *SaleOfferServiceInterface) Delete(id uint, userID uint) error {
	ret := _m.Called(id, userID)

	if len(ret) == 0 {
		panic("no return value specified for Delete")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uint, uint) error); ok {
		r0 = rf(id, userID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaleOfferServiceInterface_Delete_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Delete'
type SaleOfferServiceInterface_Delete_Call struct {
	*mock.Call
}

// Delete is a helper method to define mock.On call
//   - id uint
//   - userID uint
func (_e *SaleOfferServiceInterface_Expecter) Delete(id interface{}, userID interface{}) *SaleOfferServiceInterface_Delete_Call {
	return &SaleOfferServiceInterface_Delete_Call{Call: _e.mock.On("Delete", id, userID)}
}

func (_c *SaleOfferServiceInterface_Delete_Call) Run(run func(id uint, userID uint)) *SaleOfferServiceInterface_Delete_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint), args[1].(uint))
	})
	return _c
}

func (_c *SaleOfferServiceInterface_Delete_Call) Return(_a0 error) *SaleOfferServiceInterface_Delete_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *SaleOfferServiceInterface_Delete_Call) RunAndReturn(run func(uint, uint) error) *SaleOfferServiceInterface_Delete_Call {
	_c.Call.Return(run)
	return _c
}

// GetDetailedByID provides a mock function with given fields: id, userID
func (_m *SaleOfferServiceInterface) GetDetailedByID(id uint, userID *uint) (*sale_offer.RetrieveDetailedSaleOfferDTO, error) {
	ret := _m.Called(id, userID)

	if len(ret) == 0 {
		panic("no return value specified for GetDetailedByID")
	}

	var r0 *sale_offer.RetrieveDetailedSaleOfferDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(uint, *uint) (*sale_offer.RetrieveDetailedSaleOfferDTO, error)); ok {
		return rf(id, userID)
	}
	if rf, ok := ret.Get(0).(func(uint, *uint) *sale_offer.RetrieveDetailedSaleOfferDTO); ok {
		r0 = rf(id, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sale_offer.RetrieveDetailedSaleOfferDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(uint, *uint) error); ok {
		r1 = rf(id, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaleOfferServiceInterface_GetDetailedByID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDetailedByID'
type SaleOfferServiceInterface_GetDetailedByID_Call struct {
	*mock.Call
}

// GetDetailedByID is a helper method to define mock.On call
//   - id uint
//   - userID *uint
func (_e *SaleOfferServiceInterface_Expecter) GetDetailedByID(id interface{}, userID interface{}) *SaleOfferServiceInterface_GetDetailedByID_Call {
	return &SaleOfferServiceInterface_GetDetailedByID_Call{Call: _e.mock.On("GetDetailedByID", id, userID)}
}

func (_c *SaleOfferServiceInterface_GetDetailedByID_Call) Run(run func(id uint, userID *uint)) *SaleOfferServiceInterface_GetDetailedByID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint), args[1].(*uint))
	})
	return _c
}

func (_c *SaleOfferServiceInterface_GetDetailedByID_Call) Return(_a0 *sale_offer.RetrieveDetailedSaleOfferDTO, _a1 error) *SaleOfferServiceInterface_GetDetailedByID_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SaleOfferServiceInterface_GetDetailedByID_Call) RunAndReturn(run func(uint, *uint) (*sale_offer.RetrieveDetailedSaleOfferDTO, error)) *SaleOfferServiceInterface_GetDetailedByID_Call {
	_c.Call.Return(run)
	return _c
}

// PrepareForBuySaleOffer provides a mock function with given fields: id, userID
func (_m *SaleOfferServiceInterface) PrepareForBuySaleOffer(id uint, userID uint) (*models.SaleOffer, error) {
	ret := _m.Called(id, userID)

	if len(ret) == 0 {
		panic("no return value specified for PrepareForBuySaleOffer")
	}

	var r0 *models.SaleOffer
	var r1 error
	if rf, ok := ret.Get(0).(func(uint, uint) (*models.SaleOffer, error)); ok {
		return rf(id, userID)
	}
	if rf, ok := ret.Get(0).(func(uint, uint) *models.SaleOffer); ok {
		r0 = rf(id, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SaleOffer)
		}
	}

	if rf, ok := ret.Get(1).(func(uint, uint) error); ok {
		r1 = rf(id, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaleOfferServiceInterface_PrepareForBuySaleOffer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PrepareForBuySaleOffer'
type SaleOfferServiceInterface_PrepareForBuySaleOffer_Call struct {
	*mock.Call
}

// PrepareForBuySaleOffer is a helper method to define mock.On call
//   - id uint
//   - userID uint
func (_e *SaleOfferServiceInterface_Expecter) PrepareForBuySaleOffer(id interface{}, userID interface{}) *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call {
	return &SaleOfferServiceInterface_PrepareForBuySaleOffer_Call{Call: _e.mock.On("PrepareForBuySaleOffer", id, userID)}
}

func (_c *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call) Run(run func(id uint, userID uint)) *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint), args[1].(uint))
	})
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call) Return(_a0 *models.SaleOffer, _a1 error) *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call) RunAndReturn(run func(uint, uint) (*models.SaleOffer, error)) *SaleOfferServiceInterface_PrepareForBuySaleOffer_Call {
	_c.Call.Return(run)
	return _c
}

// PrepareForCreateSaleOffer provides a mock function with given fields: in
func (_m *SaleOfferServiceInterface) PrepareForCreateSaleOffer(in *sale_offer.CreateSaleOfferDTO) (*models.SaleOffer, error) {
	ret := _m.Called(in)

	if len(ret) == 0 {
		panic("no return value specified for PrepareForCreateSaleOffer")
	}

	var r0 *models.SaleOffer
	var r1 error
	if rf, ok := ret.Get(0).(func(*sale_offer.CreateSaleOfferDTO) (*models.SaleOffer, error)); ok {
		return rf(in)
	}
	if rf, ok := ret.Get(0).(func(*sale_offer.CreateSaleOfferDTO) *models.SaleOffer); ok {
		r0 = rf(in)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SaleOffer)
		}
	}

	if rf, ok := ret.Get(1).(func(*sale_offer.CreateSaleOfferDTO) error); ok {
		r1 = rf(in)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PrepareForCreateSaleOffer'
type SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call struct {
	*mock.Call
}

// PrepareForCreateSaleOffer is a helper method to define mock.On call
//   - in *sale_offer.CreateSaleOfferDTO
func (_e *SaleOfferServiceInterface_Expecter) PrepareForCreateSaleOffer(in interface{}) *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call {
	return &SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call{Call: _e.mock.On("PrepareForCreateSaleOffer", in)}
}

func (_c *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call) Run(run func(in *sale_offer.CreateSaleOfferDTO)) *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*sale_offer.CreateSaleOfferDTO))
	})
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call) Return(_a0 *models.SaleOffer, _a1 error) *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call) RunAndReturn(run func(*sale_offer.CreateSaleOfferDTO) (*models.SaleOffer, error)) *SaleOfferServiceInterface_PrepareForCreateSaleOffer_Call {
	_c.Call.Return(run)
	return _c
}

// PrepareForUpdateSaleOffer provides a mock function with given fields: in, userID
func (_m *SaleOfferServiceInterface) PrepareForUpdateSaleOffer(in *sale_offer.UpdateSaleOfferDTO, userID uint) (*models.SaleOffer, error) {
	ret := _m.Called(in, userID)

	if len(ret) == 0 {
		panic("no return value specified for PrepareForUpdateSaleOffer")
	}

	var r0 *models.SaleOffer
	var r1 error
	if rf, ok := ret.Get(0).(func(*sale_offer.UpdateSaleOfferDTO, uint) (*models.SaleOffer, error)); ok {
		return rf(in, userID)
	}
	if rf, ok := ret.Get(0).(func(*sale_offer.UpdateSaleOfferDTO, uint) *models.SaleOffer); ok {
		r0 = rf(in, userID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.SaleOffer)
		}
	}

	if rf, ok := ret.Get(1).(func(*sale_offer.UpdateSaleOfferDTO, uint) error); ok {
		r1 = rf(in, userID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PrepareForUpdateSaleOffer'
type SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call struct {
	*mock.Call
}

// PrepareForUpdateSaleOffer is a helper method to define mock.On call
//   - in *sale_offer.UpdateSaleOfferDTO
//   - userID uint
func (_e *SaleOfferServiceInterface_Expecter) PrepareForUpdateSaleOffer(in interface{}, userID interface{}) *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call {
	return &SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call{Call: _e.mock.On("PrepareForUpdateSaleOffer", in, userID)}
}

func (_c *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call) Run(run func(in *sale_offer.UpdateSaleOfferDTO, userID uint)) *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*sale_offer.UpdateSaleOfferDTO), args[1].(uint))
	})
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call) Return(_a0 *models.SaleOffer, _a1 error) *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call) RunAndReturn(run func(*sale_offer.UpdateSaleOfferDTO, uint) (*models.SaleOffer, error)) *SaleOfferServiceInterface_PrepareForUpdateSaleOffer_Call {
	_c.Call.Return(run)
	return _c
}

// NewSaleOfferServiceInterface creates a new instance of SaleOfferServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSaleOfferServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *SaleOfferServiceInterface {
	mock := &SaleOfferServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
