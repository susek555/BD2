// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/susek555/BD2/car-dealer-api/internal/models"
)

// AuctionPriceUpdaterInterface is an autogenerated mock type for the AuctionPriceUpdaterInterface type
type AuctionPriceUpdaterInterface struct {
	mock.Mock
}

type AuctionPriceUpdaterInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *AuctionPriceUpdaterInterface) EXPECT() *AuctionPriceUpdaterInterface_Expecter {
	return &AuctionPriceUpdaterInterface_Expecter{mock: &_m.Mock}
}

// UpdatePrice provides a mock function with given fields: auction, newPrice
func (_m *AuctionPriceUpdaterInterface) UpdatePrice(auction *models.SaleOffer, newPrice uint) error {
	ret := _m.Called(auction, newPrice)

	if len(ret) == 0 {
		panic("no return value specified for UpdatePrice")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.SaleOffer, uint) error); ok {
		r0 = rf(auction, newPrice)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// AuctionPriceUpdaterInterface_UpdatePrice_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdatePrice'
type AuctionPriceUpdaterInterface_UpdatePrice_Call struct {
	*mock.Call
}

// UpdatePrice is a helper method to define mock.On call
//   - auction *models.SaleOffer
//   - newPrice uint
func (_e *AuctionPriceUpdaterInterface_Expecter) UpdatePrice(auction interface{}, newPrice interface{}) *AuctionPriceUpdaterInterface_UpdatePrice_Call {
	return &AuctionPriceUpdaterInterface_UpdatePrice_Call{Call: _e.mock.On("UpdatePrice", auction, newPrice)}
}

func (_c *AuctionPriceUpdaterInterface_UpdatePrice_Call) Run(run func(auction *models.SaleOffer, newPrice uint)) *AuctionPriceUpdaterInterface_UpdatePrice_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*models.SaleOffer), args[1].(uint))
	})
	return _c
}

func (_c *AuctionPriceUpdaterInterface_UpdatePrice_Call) Return(_a0 error) *AuctionPriceUpdaterInterface_UpdatePrice_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *AuctionPriceUpdaterInterface_UpdatePrice_Call) RunAndReturn(run func(*models.SaleOffer, uint) error) *AuctionPriceUpdaterInterface_UpdatePrice_Call {
	_c.Call.Return(run)
	return _c
}

// NewAuctionPriceUpdaterInterface creates a new instance of AuctionPriceUpdaterInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewAuctionPriceUpdaterInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *AuctionPriceUpdaterInterface {
	mock := &AuctionPriceUpdaterInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
